from telebot import types
from rewriter.rewrite_gpt import GptRewriter
from db.sqllite_main import SQLite
import telebot
import time


# –ß–∞—Å—Ç—å —Å –±–æ—Ç–æ–º
bot = telebot.TeleBot('YOUR TOKEN')
db = SQLite("db\\users.db")
table = db.table
ID_PERS = 0


@bot.message_handler(commands=['start'])
def start_message(message):
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    full = types.KeyboardButton('–ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–ø—Ç')
    srap = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã')
    rew = types.KeyboardButton('–†–µ—Ä–∞–π—Ç —á–µ—Ä–µ–∑ GPT')
    send = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª')
    markup.add(full, srap, rew, send)#, btn2
    bot.send_message(message.chat.id, '''üëã –ü—Ä–∏–≤–µ—Ç!
üíé –° –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –±–æ—Ç–∞ —Ç—ã —Å–º–æ–∂–µ—à—å –ø–∞—Ä—Å–∏—Ç—å, —Ä–µ—Ä–∞–π—Ç–∏—Ç—å –∏ –ø–æ—Å—Ç–∏—Ç—å –ø–æ—Å—Ç—ã –∏–∑ —Ç–≥!
                     ''',  reply_markup=markup)


@bot.message_handler(content_types=['new_chat_members'])
def welcome_new_member(message):
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –Ω–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞! {message.chat.id}')


@bot.message_handler(commands=['myid'])
def send_id(message):
    bot.send_message(message.from_user.id, f'{message.from_user.id}')
    

@bot.message_handler(content_types=['text'])
def get_user_text(message, db=SQLite("db\\02.02.db")):
    global table
    global ID_PERS
    global ID_MESSAGE_EDIT
    
    db=SQLite("db\\02.02.db")
    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    full = types.KeyboardButton('–ü–æ–ª–Ω—ã–π —Å–∫—Ä–∏–ø—Ç')
    srap = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã')
    rew = types.KeyboardButton('–†–µ—Ä–∞–π—Ç —á–µ—Ä–µ–∑ GPT')
    send = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª')
    markup.add(full, srap, rew, send)
    
    markup_posts = types.ReplyKeyboardMarkup(resize_keyboard=True)
    look = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã')
    hide = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤')
    markup_posts.add(look, hide)
    
    markup_gpt = types.ReplyKeyboardMarkup(resize_keyboard=True)
    look_gpt = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã –æ—Ç GPT')
    hide_gpt = types.KeyboardButton('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤ –æ—Ç GPT')
    markup_gpt.add(look_gpt, hide_gpt)
    
    markup_gpt_delete = types.ReplyKeyboardMarkup(resize_keyboard=True)
    all_gpt_delete = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã –æ—Ç GPT')
    start = types.KeyboardButton('/start')
    markup_gpt_delete.add(all_gpt_delete, start)
    
    markup_start = types.ReplyKeyboardMarkup(resize_keyboard=True)
    start = types.KeyboardButton('/start')
    markup_start.add(start)
    
    if message.text.lower() == "–ø–æ–ª–Ω—ã–π —Å–∫—Ä–∏–ø—Ç":
        for i in range(5):
            print(i)
            
    elif message.text.lower() == "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã":
        db.take_alltables()
        list_cnt = [id + 1 for id, num in db.rows]
        
        markup_check_tables = types.ReplyKeyboardMarkup(resize_keyboard=True)
        list_btn_posts = [types.KeyboardButton(f'–¢–∞–±–ª–∏—Ü–∞ "{choice}"') for choice in db.name_tables]
        start = types.KeyboardButton('/start')
        markup_check_tables.add(*list_btn_posts, start)
        
        bot.send_message(message.chat.id, '–ò–∑ –∫–∞–∫–æ–π —Ç–∞–±–ª–∏—Ü—ã –Ω—É–∂–Ω—ã –∑–∞–ø–∏—Å–∏?', reply_markup=markup_check_tables)
        
    elif message.text.lower()[:7] == "—Ç–∞–±–ª–∏—Ü–∞":
        ID_PERS = message.from_user.id
        
        check_word = '—Ç–∞–±–ª–∏—Ü–∞ "'
        table = ''
        for c in message.text.lower():
            if c not in check_word:
                table += c
                
        db.take_all(table)
        
        list_cnt = [id + 1 for id, num in db.rows]
        
        markup_chek_table = types.ReplyKeyboardMarkup(resize_keyboard=True)
        list_btn_posts = [types.KeyboardButton(f'{choice} –ø–æ—Å—Ç') for choice in list_cnt]
        delete_all = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ')
        markup_chek_table.add(*list_btn_posts, delete_all)
        bot.send_message(message.chat.id, '–ö–∞–∫–∏–µ –ø–æ—Å—Ç—ã –Ω—É–∂–Ω—ã?', reply_markup=markup_chek_table)
    
    elif message.text.lower()[2:] in "—É–¥–∞–ª–∏—Ç—å –≤—Å–µ":
        db.delete_all(table)
        db.take_all(table)
        
        bot.send_message(message.chat.id, f'–ë–¥ –æ—á–∏—â–µ–Ω–∞, —Å—Ç–æ–ª {table} –≤–∫–ª—é—á–∞–µ—Ç {len(db.rows)} –ø–æ—Å—Ç–æ–≤', reply_markup=markup_start)
        
    
    elif message.text.lower()[2:] in "–ø–æ—Å—Ç—ã":
        markup_edit_del = types.ReplyKeyboardMarkup(resize_keyboard=True)
        edit_btn = types.KeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç')
        delete_btn = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç')
        markup_edit_del.add(edit_btn, delete_btn)
        
        db.take_all(table)
        db.rows_text = [el for id, el in db.rows]
        db.show_post = (int(message.text.lower()[0]) - 1, db.rows_text[int(message.text.lower()[0]) - 1])
        ID_MESSAGE_EDIT = db.show_post[0]
        

        bot.send_message(message.chat.id, f'"{db.show_post[1]}"\n\n–≠—Ç–æ—Ç –ø–æ—Å—Ç –≤—ã–±—Ä–∞–Ω. *–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å* –∏–ª–∏ *—É–¥–∞–ª–∏—Ç—å*?', reply_markup=markup_edit_del, parse_mode="Markdown")
    
    elif message.text.lower() == "—É–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç":
        db.take_all(table)
        for id, el in db.rows:
            if id == ID_MESSAGE_EDIT:
                db.delete(table=table, id=id)
        db.take_all(table)
        bot.send_message(ID_PERS, f'–ü–æ—Å—Ç —É–¥–∞–ª–µ–Ω, –≤ —Ç–∞–±–ª–∏—Ü–µ *{table}*, –æ—Å—Ç–∞–ª–æ—Å—å `{len(db.rows)} –ø–æ—Å—Ç–æ–≤`', reply_markup=markup_start, parse_mode="Markdown")
    
    elif message.text.lower() == "—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç":
        bot.send_message(ID_PERS, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ—Å—Ç–æ–º\n_–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ –∫–æ–≤—ã—á–∫–∞—Ö!_', parse_mode="Markdown")
        
    elif '"' in message.text.lower():
        db.take_all(table)
        for id, el in db.rows:
            if id == ID_MESSAGE_EDIT:
                db.update(table=table, post=message.text.lower(), id=id)
        bot.send_message(ID_PERS, '`–ü–æ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–¥`', reply_markup=markup_start, parse_mode="Markdown")
    
    
    elif message.text.lower() == "—Ä–µ—Ä–∞–π—Ç —á–µ—Ä–µ–∑ gpt":
        db = SQLite("db\\02.02.db")
        db.take_all("scrape")
        # db.create_table("rewrite")
        
        data = [el for id, el in db.rows]
        gpt = GptRewriter(data)
        bot.send_message(message.chat.id, f'{len(data)} –ø–æ—Å—Ç–æ–≤ –¥–ª—è —Ä–µ—Ä–∞–π—Ç–∞, –ø–æ–∂–∞–ª—É–∏ÃÜ—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...', )
        gpt.rewrite()
        db.create_table_if_not("rewrite")
        for id, el in enumerate(gpt.output):
            db.insert(table="rewrite", id=id, post=el)
        bot.send_message(message.chat.id, f'–ü–æ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–ø–∏—Å–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –±–¥', reply_markup=markup_gpt)
        
    elif message.text.lower() == "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å—Ç—ã –æ—Ç gpt":
        db = SQLite("db\\02.02.db")
        db.take_all("rewrite")
        for id, el in db.rows:
            bot.send_message(message.chat.id, el, reply_markup=markup_gpt_delete)
            
    elif message.text.lower() == "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–ª-–≤–æ –ø–æ—Å—Ç–æ–≤ –æ—Ç gpt":
        db = SQLite("db\\02.02.db")
        db.take_all("rewrite")
        bot.send_message(message.chat.id, f'{len(db.rows)} –ø–æ—Å—Ç–æ–≤ –ø–æ—Å–ª–µ —Ä–µ—Ä–∞–π—Ç–∞ –≤ –±–¥', reply_markup=markup_gpt_delete)
    
    elif message.text.lower() == "—É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã –æ—Ç gpt":
        db = SQLite("db\\02.02.db")
        db.delete_all("rewrite")
        db.take_all("rewrite")
        print(len(db.rows))
        bot.send_message(message.chat.id, f'–ë–¥ –æ—á–∏—â–µ–Ω–∞, —Å—Ç–æ–ª rewrite –≤–∫–ª—é—á–∞–µ—Ç {len(db.rows)} –ø–æ—Å—Ç–æ–≤', reply_markup=markup_start)


    elif message.text.lower() == "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª":
        db = SQLite("db\\02.02.db")
        db.take_all("rewrite")
        
        list_cnt = [id + 1 for id, num in db.rows]
        
        markup_chek_posts = types.ReplyKeyboardMarkup(resize_keyboard=True)
        list_btn_posts = [types.KeyboardButton(f'{choice} –ø–æ—Å—Ç') for choice in list_cnt]
        
        send_all = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã')
        markup_chek_posts.add(*list_btn_posts, send_all)
        
        bot.send_message(message.chat.id, f'–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π –∏–º–µ–Ω–Ω–æ –ø–æ—Å—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ', reply_markup=markup_chek_posts)

    elif message.text.lower() == "–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ –ø–æ—Å—Ç—ã":
        db = SQLite("db\\02.02.db")
        db.take_all("rewrite")
        
        for id, el in db.rows:
            bot.send_message('@pon4ik_channel', el)
            time.sleep(2)


if __name__ == '__main__':
    bot.polling(none_stop=True)
